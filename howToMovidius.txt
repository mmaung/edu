Movidius Debug Console:

  make debug -j: go into debug mode, reset board, load the elf, and start the run
    (addl cmds are printed in extra-white)
  make debugi -j: go into debug mode only

  variable in Leon RT can generally be accessed with lrt_<var-name>
  variable in Shave can generally be accessed with sx_<var-name>, with x replaced by the shave number
  if the variable name is unique, the prefix might not be necessary as debugger could figure it out

  moviDebug 2 document location:
    tools/doc/moviDebug2

  moviDebug2 is used by default, to overwrite include the switch MV_MVDBG_GEN=1 in make debug command

  look up a variable name, address, and current value:
    mget <var-name>/<address>

  another way to look up variable address (could use wildcards):
    sym list -full <var-name>/*<part-of-a-var-name>*

  diagnostic info for the whole chip:
    cpr summary

  save variable or array's content:
    savefile <filename> <addr>/<var-name> <byte-size>

  to view the call stack:
    rtemsthreads

  to halt CPUs:
    halt -all

  to get help:
    help <cmd-name>

make start_server crashes in mdk 16.06.5 and 16.06.9 with Ubuntu 16.04
(for intel 6000k cpu series according to Mario)
to fix it would require glibc rebuild with --enable-lock-elision=no

to see memory usage of the project:
  make report [MV_SOC_REV=ma2450]
  google-chrome output/report/memviz.html

syncing and getting data from LeonRT in LeonOS RTEMS environment:
  see movidiusLeonSync.c

to print cpu usage profile within the RTEMS program:
  #include <rtems/cpuuse.h>
  rtems_cpu_usage_reset();  // to reset the profiler state
  rtems_cpu_usage_report();

to find if the computer has the video stream from the Movidius:
  lsusb, and look for a device with the name "MCCI"
  qv4l2 to play the video

to view raw yuv image:
  http://rawpixels.net/
  vooya <filename>

nice to have:
  ability to pass in only the hardware one wants to initialize in LeonOS and LeonRT so that they
    don't get mixed up

bug:
  eclipse setup doesn't work as documented, its tool location seems hardcoded internally to 
    ~/WORK/Tools/Releases/General, so put the tool dir (i.e. 00.50.75.5 dir) right under it

to change usb video resolution:
  change VS_FRAME_UNCOMPRESSED block in .urc file
  change the size parameter of call to VideoDemo_WriteOneFrame
  change PROBE_DEFAULT_dwMaxVideoFrameSize and PROBE_DEFAULT_dwMaxPayloadTransferSize

to add a vendor specific usb bulk end point:
  change interface 0 block (add/subtract bulk in/out) in .urc file
  change USBPUMP_VSC2APP_NUM_EP_OUT/USBPUMP_VSC2APP_NUM_EP_IN

to debug usb:
  define DUSBPRINT_ENABLE

to enable all clock for debugging purpose:
  OsDrvCprStartAllClocks()
    implemented inside common/drivers/myriad2/socDrivers/leon/rtems/src/OsDrvCpr.c
 
  

